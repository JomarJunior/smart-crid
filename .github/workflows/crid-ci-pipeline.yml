name: 🧪 CRID CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "20"

jobs:
  # 🔍 Linting and Formatting
  lint-and-format:
    name: 🔍 Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: ✨ Check Prettier formatting
        run: npm run format:check

      - name: 🔍 Run ESLint
        run: npm run lint:javascript

      - name: 🛡️ Run Solhint
        run: npm run lint:solidity

  # 🏗️ Compile Contracts
  compile:
    name: 🔨 Compile Contracts
    runs-on: ubuntu-latest
    needs: lint-and-format
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔨 Compile smart contracts
        run: npm run compile

      - name: 📤 Upload compiled artifacts
        uses: actions/upload-artifact@v4
        with:
          name: contract-artifacts
          path: |
            artifacts/
            typechain-types/
          retention-days: 1

  # 🧪 Unit Tests
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📥 Download compiled artifacts
        uses: actions/download-artifact@v4
        with:
          name: contract-artifacts

      - name: 🧪 Run unit tests
        run: npm test

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 7

  # 📊 Coverage Report
  coverage:
    name: 📊 Test Coverage
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📥 Download compiled artifacts
        uses: actions/download-artifact@v4
        with:
          name: contract-artifacts

      - name: 📊 Generate coverage report
        run: npm run coverage

      - name: 📤 Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: 📋 Coverage Summary
        run: |
          echo "## 📊 Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          npm run coverage:summary >> $GITHUB_STEP_SUMMARY || echo "Coverage completed" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
